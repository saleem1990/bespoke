/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package inventory;

import java.sql.Connection;
import static menu.NewRecord.connectDB;
import static menu.NewRecord.username;

/**
 *
 * @author Wilson Gitau
 */
public class Stores extends javax.swing.JInternalFrame {

    /**
     * Creates new form Stores
     */
    public static Connection connectDB;
    public static String username;
    public Stores(java.sql.Connection conndb, String user) {
        connectDB = conndb;
        username = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelPanel = new javax.swing.JPanel();
        imgPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        actionsPanel = new javax.swing.JPanel();
        newAction = new javax.swing.JButton();
        updateAction = new javax.swing.JButton();
        deleteAction = new javax.swing.JButton();
        clearAction = new javax.swing.JButton();
        spacerPanel = new javax.swing.JPanel();
        fieldsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderedItemsTbl = new javax.swing.JTable();
        buttonPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fieldsPanel1 = new javax.swing.JPanel();
        branchidLbl1 = new javax.swing.JLabel();
        branchidTxt1 = new javax.swing.JTextField();
        geographicallocationLbl1 = new javax.swing.JLabel();
        geographicallocationCbx1 = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Warehouses");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        labelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        labelPanel.setLayout(new java.awt.GridBagLayout());

        imgPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        imgPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        imgPanel.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        labelPanel.add(imgPanel, gridBagConstraints);

        actionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));
        actionsPanel.setLayout(new java.awt.GridBagLayout());

        newAction.setMnemonic('w');
        newAction.setText("Save Record");
        newAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(newAction, gridBagConstraints);

        updateAction.setMnemonic('U');
        updateAction.setText("Edit");
        updateAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(updateAction, gridBagConstraints);

        deleteAction.setMnemonic('D');
        deleteAction.setText("Delete");
        deleteAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(deleteAction, gridBagConstraints);

        clearAction.setMnemonic('C');
        clearAction.setText("Clear");
        clearAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        actionsPanel.add(clearAction, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 5.0;
        actionsPanel.add(spacerPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        labelPanel.add(actionsPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(labelPanel, gridBagConstraints);

        fieldsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data manipulation utility"));
        fieldsPanel.setLayout(new java.awt.GridBagLayout());

        orderedItemsTbl.setModel(dbadmin.TableModel.createTableVectors(connectDB,"select store_id,store_name,store_category from inventory_stores"));
        jScrollPane1.setViewportView(orderedItemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(fieldsPanel, gridBagConstraints);

        buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Register Stores Here.....");
        buttonPanel.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        fieldsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data manipulation utility"));
        fieldsPanel1.setLayout(new java.awt.GridBagLayout());

        branchidLbl1.setText("Store Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel1.add(branchidLbl1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel1.add(branchidTxt1, gridBagConstraints);

        geographicallocationLbl1.setText("Store Category:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel1.add(geographicallocationLbl1, gridBagConstraints);

        geographicallocationCbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Warehouse", "Substore" }));
        geographicallocationCbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geographicallocationCbx1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        fieldsPanel1.add(geographicallocationCbx1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 5.0;
        gridBagConstraints.weighty = 20.0;
        getContentPane().add(fieldsPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newActionActionPerformed
        try {

            connectDB.setAutoCommit(false);

            java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into inventory_stores (store_name,store_category) values(?,?)");
            pstmt.setObject(1,branchidTxt1.getText());
            pstmt.setObject(2,geographicallocationCbx1.getSelectedItem().toString());
            pstmt.executeUpdate();
            connectDB.commit();
            connectDB.setAutoCommit(true);

            javax.swing.JOptionPane.showMessageDialog(this, "Data saved successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            clearAction.doClick();
            orderedItemsTbl.setModel(dbadmin.TableModel.createTableVectors(connectDB,"select store_id,store_name,store_category from inventory_stores"));
        }   catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_newActionActionPerformed

    private void deleteActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionActionPerformed
        // TODO add your handling code here:
         try{
            connectDB.setAutoCommit(false);
            java.sql.PreparedStatement pstmt31 = connectDB.prepareStatement("DELETE from inventory_stores WHERE store_id = '"+orderedItemsTbl.getModel().getValueAt(orderedItemsTbl.getSelectedRow(),0).toString()+"'");
            pstmt31.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data Deleted successfully","Confirmation Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            connectDB.commit();
            connectDB.setAutoCommit(true);
            
        }catch(java.sql.SQLException sq){
            javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            try {
                connectDB.rollback();
            }catch (java.sql.SQLException sql){
                javax.swing.JOptionPane.showMessageDialog(this,sql.getMessage(),"Error Message!",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_deleteActionActionPerformed

    private void clearActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionActionPerformed
        // TODO add your handling code here:
        geographicallocationCbx1.setSelectedIndex(0);
        branchidTxt1.setText("");
         for (int k = 0; k <orderedItemsTbl.getRowCount(); k++) {
            for (int r = 0; r < orderedItemsTbl.getColumnCount(); r++) {
                orderedItemsTbl.getModel().setValueAt(null, k, r);
            }
        }
    }//GEN-LAST:event_clearActionActionPerformed

    private void geographicallocationCbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geographicallocationCbx1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_geographicallocationCbx1ActionPerformed

    private void updateActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < orderedItemsTbl.getRowCount(); k++ ) {
            for (int r = 0; r < orderedItemsTbl.getColumnCount(); r++ ) {
                orderedItemsTbl.getModel().setValueAt(null,k,r);
            }
        }
        int i = 0;
        orderedItemsTbl.setModel(dbadmin.TableModel.createTableVectors(connectDB,"select store_id,store_name,store_category from inventory_stores"));
        
    }//GEN-LAST:event_updateActionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JLabel branchidLbl1;
    private javax.swing.JTextField branchidTxt1;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearAction;
    private javax.swing.JButton deleteAction;
    private javax.swing.JPanel fieldsPanel;
    private javax.swing.JPanel fieldsPanel1;
    private javax.swing.JComboBox geographicallocationCbx1;
    private javax.swing.JLabel geographicallocationLbl1;
    private javax.swing.JPanel imgPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JButton newAction;
    private javax.swing.JTable orderedItemsTbl;
    private javax.swing.JPanel spacerPanel;
    private javax.swing.JButton updateAction;
    // End of variables declaration//GEN-END:variables
}
