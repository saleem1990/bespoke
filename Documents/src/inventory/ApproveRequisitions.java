/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author saleem
 */
public class ApproveRequisitions extends javax.swing.JInternalFrame {

    /**
     * Creates new form ApproveRequisitions
     */
    java.sql.Connection connectDB;

    public static String username = "";

    public ApproveRequisitions(java.sql.Connection conndb, String user) {
        connectDB = conndb;
        username = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTbl = new dbadmin.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        reqNotxt = new javax.swing.JTextField();
        raisedBytxt = new javax.swing.JTextField();
        storeRaising = new javax.swing.JTextField();
        issuingStore = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        raisedate = new javax.swing.JTextField();
        dueDate = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jSplitPane1.setDividerLocation(200);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no FROM inventory_requisitions WHERE approved = FALSE"));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jTextField1, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Requisition Details"));

        itemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(itemsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel3.add(jScrollPane2, gridBagConstraints);

        jLabel1.setText("Req No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Raised by");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Store Raising");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel3, gridBagConstraints);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setText("Clear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jButton2, gridBagConstraints);

        jLabel4.setText("Issuing Store");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel4, gridBagConstraints);

        reqNotxt.setEditable(false);
        reqNotxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        reqNotxt.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(reqNotxt, gridBagConstraints);

        raisedBytxt.setEditable(false);
        raisedBytxt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        raisedBytxt.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(raisedBytxt, gridBagConstraints);

        storeRaising.setEditable(false);
        storeRaising.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        storeRaising.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(storeRaising, gridBagConstraints);

        issuingStore.setEditable(false);
        issuingStore.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        issuingStore.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(issuingStore, gridBagConstraints);

        jLabel5.setText("Raised on");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Date Due");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel6, gridBagConstraints);

        raisedate.setEditable(false);
        raisedate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        raisedate.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(raisedate, gridBagConstraints);

        dueDate.setEditable(false);
        dueDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dueDate.setForeground(new java.awt.Color(0, 51, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(dueDate, gridBagConstraints);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 153));
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jSplitPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        String req = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        reqNotxt.setText(req);
        try {
            java.sql.Statement ps = connectDB.createStatement();

            java.sql.ResultSet rs2 = ps.executeQuery("SELECT  requisitioning_store, issuing_store, "
                    + "date_requested, due_date, \n"
                    + "	comments,  ordered_by\n"
                    + "	FROM public.inventory_requisitions WHERE requisition_no ='" + req + "' AND approved = false;");
            while (rs2.next()) {

                storeRaising.setText(rs2.getString(1));
                issuingStore.setText(rs2.getString(2));
                raisedate.setText(rs2.getDate(3).toString());
                dueDate.setText(rs2.getDate(4).toString());
                jTextArea1.setText(rs2.getString(5));
                raisedBytxt.setText(rs2.getString(6));

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        itemsTbl.setModel(dbadmin.TableModel.createTableVectors(connectDB, "SELECT item_code, unit, strength, quantity_required, quantity_issued, false as approve\n"
                + "       FROM public.inventory_requisitions WHERE approved=false AND requisition_no='" + req + "';"));

        for (int i = 0; i < itemsTbl.getRowCount(); i++) {

            itemsTbl.setValueAt(false, i, 5);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        jTable1.setModel(dbadmin.TableModel.createTableVectors(connectDB, "SELECT DISTINCT requisition_no FROM inventory_requisitions WHERE approved = FALSE"));



        String req = reqNotxt.getText();
        String code = "";
        int items = 0;
        try {

            for (int i = 0; i < itemsTbl.getRowCount(); i++) {
                if (Boolean.valueOf((Boolean) itemsTbl.getValueAt(i, 5)) == true) {

                    items++;

                    System.err.println(items);
                    code = itemsTbl.getValueAt(i, 0).toString();
                    System.err.println(code);
                    PreparedStatement ps = connectDB.prepareStatement("UPDATE inventory_requisitions SET approved = true"
                            + " , approved_by = '" + username + "' WHERE requisition_no ='" + req + "' AND item_code = '" + code.trim() + "';");

                    System.err.println("UPDATE inventory_requisitions SET approved = true"
                            + " , approved_by = '" + username + "' WHERE requisition_no ='" + req + "' AND item_code = '" + code.trim() + "';");
                    ps.executeUpdate();

                }
            }

            if (items == itemsTbl.getRowCount()) {
                JOptionPane.showMessageDialog(this, "All items approved for issuing");
            } else {
                JOptionPane.showMessageDialog(this, +items + " of " + itemsTbl.getRowCount() + " items were approved");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dueDate;
    private javax.swing.JTextField issuingStore;
    private javax.swing.JTable itemsTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField raisedBytxt;
    private javax.swing.JTextField raisedate;
    private javax.swing.JTextField reqNotxt;
    private javax.swing.JTextField storeRaising;
    // End of variables declaration//GEN-END:variables
}
