/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sys;

import java.io.FileNotFoundException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author saleem
 */
public class LoginDialog extends javax.swing.JDialog {

    public static String dbServerIp;
    public static String dbPort;
    public static String activeDatabase;
    public static String userName;
    private org.netbeans.lib.sql.PasswordInfo pwdInfo;
    java.sql.Connection connDB = null;
    org.netbeans.lib.sql.pool.PooledConnectionSource pconnDB = null;

    /**
     * Creates new form LoginDialog
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("login dialog");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(350, 200));
        setModal(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("login ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTextField1, gridBagConstraints);

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Abort");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jButton2, gridBagConstraints);

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(closeBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPasswordField1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jProgressBar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeBtnActionPerformed

    public java.sql.Connection getDbConnection(java.lang.String userName, java.lang.String passWord) throws java.sql.SQLException {

        java.sql.Connection connection = null;

        try {

            java.lang.Class.forName("org.postgresql.Driver");

        } catch (java.lang.ClassNotFoundException cnf) {

            cnf.printStackTrace();

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), cnf.getMessage());

        }

        try {

            if (dbServerIp == null) {
                dbServerIp = "localhost";
            }

            if (dbPort == null) {
                dbPort = "5432";
            }

            if (activeDatabase == null) {
                activeDatabase = "bespoke";
            }
            System.out.println("jdbc:postgresql://" + this.dbServerIp + ":" + dbPort + "/" + activeDatabase + " " + userName + " " + passWord);
            connection = java.sql.DriverManager.getConnection("jdbc:postgresql://" + this.dbServerIp + ":" + dbPort + "/" + activeDatabase, userName, passWord);

        } catch (java.sql.SQLException sqlExec) {

            sqlExec.printStackTrace();
            this.setVisible(true);

            javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), "ERROR : Logon denied due to incorrect username & password,\n network disconnection or dataserver not running!\n\nERROR DETAILS : \n[" + sqlExec.getMessage() + "]");

        }

        return connection;
    }

    public org.netbeans.lib.sql.pool.PooledConnectionSource getPooledConnectionSource() {

        org.netbeans.lib.sql.pool.PooledConnectionSource pooledConnectionSource1 = new org.netbeans.lib.sql.pool.PooledConnectionSource();

        pooledConnectionSource1.setDatabase("jdbc:postgresql://" + this.dbServerIp + ":" + dbPort + "/" + activeDatabase);

        pooledConnectionSource1.setDriver("org.postgresql.Driver");

        pooledConnectionSource1.setPassword(pwdInfo);
        pooledConnectionSource1.setUsername(userName);
        return pooledConnectionSource1;
    }

    public void logOn2System() throws FileNotFoundException {

        //       com.afrisoftech.hospital.HospitalMain secureHospitalInst = null;
        java.awt.Toolkit.getDefaultToolkit().beep();

        userName = this.jTextField1.getText().toLowerCase();

        char passsWord[] = this.jPasswordField1.getPassword();

        java.lang.String passWord = java.lang.String.copyValueOf(passsWord);

        pwdInfo = new org.netbeans.lib.sql.PasswordInfo(passWord);

        java.sql.Statement resStatement = null;

        if (!userName.equals("") && !passWord.equals("")) {

            System.out.println("I am here also");

            try {

                connDB = this.getDbConnection(userName, passWord);

                // connDB.setClientInfo("ApplicationName", "Funsoft I-HMIS");
                pconnDB = this.getPooledConnectionSource();

                if ((connDB != null) && (pconnDB != null)) {

                    //loading system here
                    if (!connDB.equals(null)) {

                        System.out.println("Connected to database successfully");

                        resStatement = connDB.createStatement();

                    }
                    System.out.println("Created statement");

                    java.sql.ResultSet reSet = resStatement.executeQuery("select menu_item from secure_password where login_name ='" + userName + "'");

                    System.out.println("selected");

                    while (reSet.next()) {

                        java.lang.reflect.Field[] field;

                        try {

                            java.lang.Class cl = Class.forName("com.afrisoftech.hospital.HospitalMain");

                            field = cl.getDeclaredFields();

                            System.out.println("Class loaded");

                            for (int j = 0; j < field.length; j++) {

                                if (field[j].getName().endsWith("mnit")) {

                                    System.out.println(field[j]);
                                }

                            }

                        } catch (java.lang.Exception Exc) {

                            Exc.printStackTrace();

                            System.out.println("Error");
                        }

                    }

                } else {

                    this.setVisible(true);

                    this.toFront();

                }

            } catch (java.sql.SQLException sqlExec) {

                java.awt.Toolkit.getDefaultToolkit().beep();

                sqlExec.printStackTrace();

                javax.swing.JOptionPane.showMessageDialog(this, sqlExec.getMessage());

            }

        } else {

            if (userName.equals("") && passWord.equals("")) {

                java.awt.Toolkit.getDefaultToolkit().beep();

                javax.swing.JOptionPane.showMessageDialog(this, "Can't have null username"
                        + " and password!", "Warning!", javax.swing.JOptionPane.WARNING_MESSAGE);

                this.setVisible(true);

                this.toFront();

            } else {

                if (userName.equals("") && !passWord.equals("")) {

                    java.awt.Toolkit.getDefaultToolkit().beep();

                    javax.swing.JOptionPane.showMessageDialog(this, "Can't have null "
                            + "username!", "Warning!", javax.swing.JOptionPane.WARNING_MESSAGE);

                    this.setVisible(true);

                    this.toFront();

                } else {
                    if (!userName.equals("") && passWord.equals("")) {

                        java.awt.Toolkit.getDefaultToolkit().beep();

                        javax.swing.JOptionPane.showMessageDialog(this, "Can't have null "
                                + "password!", "Warning!", javax.swing.JOptionPane.WARNING_MESSAGE);

                        this.setVisible(true);

                        this.toFront();

                    }

                }
            }
        }

        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().length() > 0 && jPasswordField1.getPassword().length > 0) {

            System.out.println("I am here");
            try {
                logOn2System();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
                Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            JOptionPane.showMessageDialog(this, "Empty fields", "Enter login details", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int exitOption = JOptionPane.showConfirmDialog(this, "Sure to abort?", "Select either", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (exitOption == 0) {
            JOptionPane.showMessageDialog(this, "Rolling back login..");

            closeBtn.doClick();

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginDialog dialog = new LoginDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
