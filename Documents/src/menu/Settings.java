/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menu;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JButton;
import sys.MainFrame;

/**
 *
 * @author saleem
 */
public class Settings extends javax.swing.JInternalFrame {

    public static Connection connectDB;
    public static String username;

    /**
     * Creates new form NewRecords
     */
    public Settings(java.sql.Connection conndb, String user) {
        connectDB = conndb;
        username = user;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        domainsmnit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Settings");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton3.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 204));
        jButton3.setMnemonic('S');
        jButton3.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(jButton3, gridBagConstraints);

        jButton6.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 51, 204));
        jButton6.setMnemonic('c');
        jButton6.setText("Institution");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(jButton6, gridBagConstraints);

        domainsmnit.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        domainsmnit.setForeground(new java.awt.Color(0, 51, 204));
        domainsmnit.setMnemonic('u');
        domainsmnit.setText("Update Domains");
        domainsmnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainsmnitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(domainsmnit, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 51, 204));
        jButton4.setMnemonic('b');
        jButton4.setText("SMS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(jButton4, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 204));
        jButton2.setMnemonic('i');
        jButton2.setText("Inventory Settings");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(jButton2, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Padauk Book", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 204));
        jButton1.setMnemonic('S');
        jButton1.setText("Store Allocation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        getContentPane().add(jButton1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void domainsmnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domainsmnitActionPerformed
        // TODO add your handling code here:
        delete();
        String[] fieldsArray = getMainMenus();
        getsubmenus(fieldsArray);
    }//GEN-LAST:event_domainsmnitActionPerformed

    private void delete() {
        try {

            java.sql.PreparedStatement pstmt_delete = this.connectDB.prepareStatement("DELETE FROM public.secure_submenus ");

            pstmt_delete.execute();

            java.sql.PreparedStatement pstmt_del = this.connectDB.prepareStatement("DELETE FROM public.secure_main_menus ");

            pstmt_del.execute();

        } catch (SQLException sq) {
            sq.printStackTrace();
        }

    }

    public void getsubmenus(String[] fieldsArray) {
        for (int i = 0; i < fieldsArray.length; i++) {
            String className = "menu." + fieldsArray[i].replace("btin", "").replace("_", "");
            updatemenus(className, fieldsArray[i]);
            System.out.println("menu." + fieldsArray[i].replace("btin", "").replace("_", ""));
        }

    }

    private void updatemenus(String ClassName, String mainMenuId) {
        java.lang.reflect.Field[] fieldsArray = null;
        String finalmenu = "";

        try {

            java.lang.Class classMain = java.lang.Class.forName(ClassName);

            fieldsArray = classMain.getDeclaredFields();

            for (int n = 0; n < fieldsArray.length; n++) {

                if (fieldsArray[n].getName().endsWith("mnit")) {
                    String disMenuItems = fieldsArray[n].getName().replace("mnit", "").replace("_", " ");
                    if (finalmenu.equalsIgnoreCase("")) {
                        finalmenu = disMenuItems;
                        System.err.println(finalmenu);
                    } else {
                        finalmenu = finalmenu + "," + disMenuItems;
                        System.out.println(finalmenu);
                    }

                }
            }
            try {

                java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into secure_submenus values(?, ?)");

                pstmt.setString(1, mainMenuId);

                pstmt.setString(2, finalmenu);

                pstmt.executeUpdate();

            } catch (java.sql.SQLException sq) {

                javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                System.out.println(sq.getMessage());

            }

        } catch (Exception clsNotFnd) {
            clsNotFnd.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

        }
    }

    public String[] getMainMenus() {
        java.lang.reflect.Field[] fieldsArray = null;
        String[] field = new String[5];
        int j = 0;
        try {

            java.lang.Class classMain = java.lang.Class.forName("sys.MainFrame");

            fieldsArray = classMain.getDeclaredFields();

            for (int n = 0; n < fieldsArray.length; n++) {

                if (fieldsArray[n].getName().endsWith("btin")) {
                    System.out.println(j);
                    field[j] = fieldsArray[n].getName();
                    String disMenuItems = fieldsArray[n].getName().replace("btin", "").replace("_", " ");

                    try {

                        java.sql.PreparedStatement pstmt = connectDB.prepareStatement("insert into secure_main_menus values(?, ?)");

                        // System.out.println("Ready to insert menu items -->"+fieldsArray[n].getName());
                        System.out.println("Inserting Menu Item -->" + fieldsArray[n].getName());

                        pstmt.setString(1, fieldsArray[n].getName());

                        pstmt.setString(2, disMenuItems);

                        pstmt.executeUpdate();

                    } catch (java.sql.SQLException sq) {

                        javax.swing.JOptionPane.showMessageDialog(this, sq.getMessage(), "Error Message!", javax.swing.JOptionPane.ERROR_MESSAGE);

                        System.out.println(sq.getMessage());

                    }

                    j = j + 1;
                }

            }

        } catch (java.lang.ClassNotFoundException clsNotFnd) {

            javax.swing.JOptionPane.showMessageDialog(this, "Class hospital.hospital not found in the classpath");

        }
        return field;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton domainsmnit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    // End of variables declaration//GEN-END:variables
}
